{"ast":null,"code":"var _jsxFileName = \"/Users/pazun/Documents/codes/maps/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { MapContainer, TileLayer, Rectangle, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport './App.css';\n\n// Helper function to convert degrees to radians\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction toRadians(deg) {\n  return deg * Math.PI / 180;\n}\n\n// Helper function to convert radians to degrees\nfunction toDegrees(rad) {\n  return rad * 180 / Math.PI;\n}\n\n// Function to calculate tile coordinates from latitude and longitude\nfunction latLonToTile(lat, lon, zoom) {\n  const n = Math.pow(2, zoom);\n  const latRad = toRadians(lat);\n  const xtile = Math.floor(n * ((lon + 180) / 360));\n  const ytile = Math.floor(n * (1 - Math.log(Math.tan(latRad) + 1 / Math.cos(latRad)) / Math.PI) / 2);\n  return {\n    x: xtile,\n    y: ytile\n  };\n}\n\n// Function to calculate latitude and longitude from tile coordinates\nfunction tileToLatLon(x, y, zoom) {\n  const n = Math.pow(2, zoom);\n  const lon = x / n * 360 - 180;\n  const latRad = Math.atan(Math.sinh(Math.PI * (1 - 2 * y / n)));\n  const lat = toDegrees(latRad);\n  return {\n    lat: lat,\n    lon: lon\n  };\n}\n\n// Function to get tile URL\nfunction getTileUrl(x, y, z) {\n  return `https://tile.openstreetmap.org/${z}/${x}/${y}.png`;\n}\n\n// Custom hook to get map instance\nfunction MapController({\n  bounds,\n  setBounds\n}) {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    if (map) {\n      map.on('boxzoomend', e => {\n        setBounds(e.boxZoomBounds);\n      });\n    }\n  }, [map, setBounds]);\n  return null;\n}\n_s(MapController, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = MapController;\nfunction App() {\n  _s2();\n  const [bounds, setBounds] = useState(null);\n  const [format, setFormat] = useState('png');\n  const [zoom, setZoom] = useState(15);\n  const mapRef = useRef();\n  const handleDownload = async () => {\n    if (!bounds) {\n      alert('Please select an area on the map first.');\n      return;\n    }\n    if (format === 'png') {\n      // Calculate tile range for the selected bounds and zoom level\n      const northWest = bounds.getNorthWest();\n      const southEast = bounds.getSouthEast();\n      const startTile = latLonToTile(northWest.lat, northWest.lng, zoom);\n      const endTile = latLonToTile(southEast.lat, southEast.lng, zoom);\n      const minX = Math.min(startTile.x, endTile.x);\n      const maxX = Math.max(startTile.x, endTile.x);\n      const minY = Math.min(startTile.y, endTile.y);\n      const maxY = Math.max(startTile.y, endTile.y);\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      const tileWidth = 256;\n      const tileHeight = 256;\n      canvas.width = (maxX - minX + 1) * tileWidth;\n      canvas.height = (maxY - minY + 1) * tileHeight;\n      let loadedTiles = 0;\n      const totalTiles = (maxX - minX + 1) * (maxY - minY + 1);\n      const tilePromises = [];\n      for (let x = minX; x <= maxX; x++) {\n        for (let y = minY; y <= maxY; y++) {\n          const img = new Image();\n          img.crossOrigin = 'Anonymous'; // Required for CORS to prevent canvas tainting\n          img.src = getTileUrl(x, y, zoom);\n          const promise = new Promise((resolve, reject) => {\n            img.onload = () => {\n              ctx.drawImage(img, (x - minX) * tileWidth, (y - minY) * tileHeight, tileWidth, tileHeight);\n              loadedTiles++;\n              // You could add a progress bar update here\n              console.log(`Loaded ${loadedTiles}/${totalTiles} tiles`);\n              resolve();\n            };\n            img.onerror = () => {\n              console.error(`Failed to load tile: ${img.src}`);\n              reject(new Error(`Failed to load tile: ${img.src}`));\n            };\n          });\n          tilePromises.push(promise);\n        }\n      }\n      try {\n        await Promise.all(tilePromises);\n        canvas.toBlob(blob => {\n          const url = URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = `map_export_${zoom}.png`;\n          document.body.appendChild(a);\n          a.click();\n          document.body.removeChild(a);\n          URL.revokeObjectURL(url);\n          alert('PNG map downloaded!');\n        }, 'image/png');\n      } catch (error) {\n        alert('Failed to download map. Check console for details.');\n        console.error('Map download error:', error);\n      }\n    } else if (format === 'svg') {\n      alert('SVG export is not yet implemented. Please select PNG.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"OSM Map Exporter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [51.505, -0.09],\n        zoom: zoom,\n        scrollWheelZoom: true,\n        style: {\n          height: '600px',\n          width: '100%'\n        },\n        whenCreated: mapInstance => {\n          mapRef.current = mapInstance;\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), bounds && /*#__PURE__*/_jsxDEV(Rectangle, {\n          bounds: bounds,\n          pathOptions: {\n            color: 'red',\n            weight: 1,\n            fillOpacity: 0.1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MapController, {\n          bounds: bounds,\n          setBounds: setBounds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Format:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: format,\n          onChange: e => setFormat(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"png\",\n            children: \"PNG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"svg\",\n            children: \"SVG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Zoom Level:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: zoom,\n          onChange: e => setZoom(parseInt(e.target.value)),\n          min: \"1\",\n          max: \"19\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"6Xx6P07EyoEUvrhypp0SDLwyJx0=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapController\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MapContainer","TileLayer","Rectangle","useMap","L","jsxDEV","_jsxDEV","toRadians","deg","Math","PI","toDegrees","rad","latLonToTile","lat","lon","zoom","n","pow","latRad","xtile","floor","ytile","log","tan","cos","x","y","tileToLatLon","atan","sinh","getTileUrl","z","MapController","bounds","setBounds","_s","map","on","e","boxZoomBounds","_c","App","_s2","format","setFormat","setZoom","mapRef","handleDownload","alert","northWest","getNorthWest","southEast","getSouthEast","startTile","lng","endTile","minX","min","maxX","max","minY","maxY","canvas","document","createElement","ctx","getContext","tileWidth","tileHeight","width","height","loadedTiles","totalTiles","tilePromises","img","Image","crossOrigin","src","promise","Promise","resolve","reject","onload","drawImage","console","onerror","error","Error","push","all","toBlob","blob","url","URL","createObjectURL","a","href","download","body","appendChild","click","removeChild","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","scrollWheelZoom","style","whenCreated","mapInstance","current","attribution","pathOptions","color","weight","fillOpacity","value","onChange","target","type","parseInt","onClick","_c2","$RefreshReg$"],"sources":["/Users/pazun/Documents/codes/maps/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { MapContainer, TileLayer, Rectangle, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport './App.css';\n\n// Helper function to convert degrees to radians\nfunction toRadians(deg) {\n  return deg * Math.PI / 180;\n}\n\n// Helper function to convert radians to degrees\nfunction toDegrees(rad) {\n  return rad * 180 / Math.PI;\n}\n\n// Function to calculate tile coordinates from latitude and longitude\nfunction latLonToTile(lat, lon, zoom) {\n  const n = Math.pow(2, zoom);\n  const latRad = toRadians(lat);\n  const xtile = Math.floor(n * ((lon + 180) / 360));\n  const ytile = Math.floor(n * (1 - (Math.log(Math.tan(latRad) + 1 / Math.cos(latRad)) / Math.PI)) / 2);\n  return { x: xtile, y: ytile };\n}\n\n// Function to calculate latitude and longitude from tile coordinates\nfunction tileToLatLon(x, y, zoom) {\n  const n = Math.pow(2, zoom);\n  const lon = (x / n) * 360 - 180;\n  const latRad = Math.atan(Math.sinh(Math.PI * (1 - 2 * y / n)));\n  const lat = toDegrees(latRad);\n  return { lat: lat, lon: lon };\n}\n\n// Function to get tile URL\nfunction getTileUrl(x, y, z) {\n  return `https://tile.openstreetmap.org/${z}/${x}/${y}.png`;\n}\n\n// Custom hook to get map instance\nfunction MapController({ bounds, setBounds }) {\n  const map = useMap();\n\n  useEffect(() => {\n    if (map) {\n      map.on('boxzoomend', (e) => {\n        setBounds(e.boxZoomBounds);\n      });\n    }\n  }, [map, setBounds]);\n\n  return null;\n}\n\nfunction App() {\n  const [bounds, setBounds] = useState(null);\n  const [format, setFormat] = useState('png');\n  const [zoom, setZoom] = useState(15);\n  const mapRef = useRef();\n\n  const handleDownload = async () => {\n    if (!bounds) {\n      alert('Please select an area on the map first.');\n      return;\n    }\n\n    if (format === 'png') {\n      // Calculate tile range for the selected bounds and zoom level\n      const northWest = bounds.getNorthWest();\n      const southEast = bounds.getSouthEast();\n\n      const startTile = latLonToTile(northWest.lat, northWest.lng, zoom);\n      const endTile = latLonToTile(southEast.lat, southEast.lng, zoom);\n\n      const minX = Math.min(startTile.x, endTile.x);\n      const maxX = Math.max(startTile.x, endTile.x);\n      const minY = Math.min(startTile.y, endTile.y);\n      const maxY = Math.max(startTile.y, endTile.y);\n\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n\n      const tileWidth = 256;\n      const tileHeight = 256;\n\n      canvas.width = (maxX - minX + 1) * tileWidth;\n      canvas.height = (maxY - minY + 1) * tileHeight;\n\n      let loadedTiles = 0;\n      const totalTiles = (maxX - minX + 1) * (maxY - minY + 1);\n\n      const tilePromises = [];\n\n      for (let x = minX; x <= maxX; x++) {\n        for (let y = minY; y <= maxY; y++) {\n          const img = new Image();\n          img.crossOrigin = 'Anonymous'; // Required for CORS to prevent canvas tainting\n          img.src = getTileUrl(x, y, zoom);\n\n          const promise = new Promise((resolve, reject) => {\n            img.onload = () => {\n              ctx.drawImage(img, (x - minX) * tileWidth, (y - minY) * tileHeight, tileWidth, tileHeight);\n              loadedTiles++;\n              // You could add a progress bar update here\n              console.log(`Loaded ${loadedTiles}/${totalTiles} tiles`);\n              resolve();\n            };\n            img.onerror = () => {\n              console.error(`Failed to load tile: ${img.src}`);\n              reject(new Error(`Failed to load tile: ${img.src}`));\n            };\n          });\n          tilePromises.push(promise);\n        }\n      }\n\n      try {\n        await Promise.all(tilePromises);\n        canvas.toBlob((blob) => {\n          const url = URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = `map_export_${zoom}.png`;\n          document.body.appendChild(a);\n          a.click();\n          document.body.removeChild(a);\n          URL.revokeObjectURL(url);\n          alert('PNG map downloaded!');\n        }, 'image/png');\n      } catch (error) {\n        alert('Failed to download map. Check console for details.');\n        console.error('Map download error:', error);\n      }\n    } else if (format === 'svg') {\n      alert('SVG export is not yet implemented. Please select PNG.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>OSM Map Exporter</h1>\n      </header>\n      <div className=\"map-container\">\n        <MapContainer\n          center={[51.505, -0.09]}\n          zoom={zoom}\n          scrollWheelZoom={true}\n          style={{ height: '600px', width: '100%' }}\n          whenCreated={mapInstance => { mapRef.current = mapInstance; }}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {bounds && (\n            <Rectangle bounds={bounds} pathOptions={{ color: 'red', weight: 1, fillOpacity: 0.1 }} />\n          )}\n          <MapController bounds={bounds} setBounds={setBounds} />\n        </MapContainer>\n      </div>\n      <div className=\"controls\">\n        <div>\n          <label>Format:</label>\n          <select value={format} onChange={(e) => setFormat(e.target.value)}>\n            <option value=\"png\">PNG</option>\n            <option value=\"svg\">SVG</option>\n          </select>\n        </div>\n        <div>\n          <label>Zoom Level:</label>\n          <input\n            type=\"number\"\n            value={zoom}\n            onChange={(e) => setZoom(parseInt(e.target.value))}\n            min=\"1\"\n            max=\"19\"\n          />\n        </div>\n        <button onClick={handleDownload}>Download Map</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}